kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.ReplicaNumber }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/ConfigMap.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: index-html
          configMap:
            name: '{{ .Chart.Name }}-html'
            defaultMode: 420
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: {{ .Chart.Name }}
          ports:
            - containerPort: {{ .Values.containers.containerPort }}
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          image: {{ .Values.containers.image }}:{{ .Values.containers.tag }}
          volumeMounts:
          - name: {{ .Values.volume.name }} 
            mountPath: {{ .Values.volume.path }} 
          readinessProbe:
            httpGet:
              path: /health/readiness # this check the application url path
              port: {{ .Values.containers.containerPort  }} # In which port the Application is listening
              scheme: HTTP
            {{- tpl (toYaml .Values.probes) . | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health/liveliness
              port: {{ .Values.containers.containerPort }}
              scheme: HTTP
            {{- tpl (toYaml .Values.probes) . | nindent 12 }}
          env:
            - name: PORT
              value: {{ .Values.containers.containerPort | quote }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10